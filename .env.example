# Server's configuration file
# Attention! If you need to change a variable that has a "Dependency", check it and change it also in another file.
# This sample file is also used as a working configuration file for Github CI.


# Warning! value true for Github CI only
# If true only two languages, Russian and English, will be loaded for translation.
# Uncomment it
# CI=false
# Remove it
CI=true

# Database config
# If you use Docker the host must be "db"
# Dependency (only if Docker used) with POSTGRES_USER and POSTGRES_PASSWORD and POSTGRES_DB below
# DATABASE_URL=postgresql://username:password@db:5432/db_name
DATABASE_URL=postgresql://username:password@127.0.0.1:5432/db_name

# Translate local url
# If you use Docker the host must be "translate"
# Dependency with PORT in packages/translate2/.env and with TRANSLATE_PORT below
# TRANSLATE_URL=http://translate:8000
TRANSLATE_URL=http://127.0.0.1:8000

# Translate local port
# Used for Docker environment only
# Dependency with PORT in packages/translate2/.env and with TRANSLATE_URL above
TRANSLATE_PORT=8000

# API server local port
# Dependency with NEXT_PUBLIC_SERVER and SERVER_LOCAL_ADDRESS in packages/app/.env
PORT=3001

# API server port SSL
# Used for Docker environment only
# Serves for remote access to the API server running in Docker locally
# Dependency with NEXT_PUBLIC_SERVER in packages/app/.env
PORT_SSL=4444

# WebSocket port
# Dependency with NEXT_PUBLIC_WS_ADDRESS in packages/app/.env
WS_PORT=3002

# WebSocket port SSL
# Used for Docker environment only
# Serves for remote access to the WS server running in Docker locally
# Dependency with NEXT_PUBLIC_WS_ADDRESS in packages/app/.env
WS_PORT_SSL=4433;

# Port of application
# Serves for local access to the application running in Docker locally
APP_PORT=3000

# Server local host
# If you use Docker the host must me "server"
# HOST=server
HOST=localhost

# Server's log level
# 0 - all | 1 - info | 2 - warn | 3 - error
LOG_LEVEL=0

# Branch name for check git script
BRANCH=develop

# Log level for Prisma.js
# info | query | warn | error
PRISMA_LOG=warn

# Node js environment
NODE_ENV=development

# Fastify log for every request
FASTIFY_LOGGER=false

# Public application address
# Serve for CORS settings and, it's part of links for sevice emails
APP_URL=http://localhost:3000

# Additional CORS allowed addresses
CORS=http://192.168.0.3:3010,

# Chromium setting headless
TEST_HEADLES=false

# Key for encrypt JSON Web Token
# Change it for the security
JSONWEBTOKEN_KEY=strong

# SMTP settings for send emails from application to users and to admin
SMTP_PASSWORD=strong
SMTP_EMAIL=email@email.email
SMTP_HOST=smtp.email.email
SMTP_PORT=587

# Email of admininstrator
# To send messages in case of fatal errors on the server
ADMIN_EMAIL=email@email.email

# Email of support
# Copies of the user's emails will be sent there so that the user can receive a support response from that address
SUPPORT_EMAIL=email@email.email

# Docker config postgres user
# Dependency with DATABASE_URL
POSTGRES_USER=username

# Docker config postgres password
# Dependency with DATABASE_URL
POSTGRES_PASSWORD=password

# Docker config postgres database name
# Dependency with DATABASE_URL
POSTGRES_DB=db_name

# Docker config pgadmin email
PGADMIN_DEFAULT_EMAIL=admin@admin.com

# Docker config pgadmin password
PGADMIN_DEFAULT_PASSWORD=strong-password

# Only scripts/sh/change-nginx-variables.sh script
DOLLAR=$