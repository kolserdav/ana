datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

enum PageName {
  index
  login
  registration
  restorePassword
  changePassword
  confirmEmail
  translate
  my
  policy
  rules
  contacts
  about
  settings
  donate
}

enum PageField {
  title
  description
  keywords
  content
}

enum Lang {
  ru
  en
}

model Page {
  id    Int       @id @default(autoincrement())
  name  PageName
  field PageField
  value String    @db.Text
  lang  Lang
}

enum UserRole {
  admin
  user
}

model User {
  id                   String                 @id @default(uuid())
  name                 String?                @db.VarChar(24)
  email                String                 @unique @db.VarChar(255)
  confirm              Boolean                @default(false)
  password             String
  salt                 String                 @db.VarChar(32)
  updated              DateTime               @default(now())
  created              DateTime               @default(now())
  pushEnabled          Boolean                @default(true)
  timeZone             Int?
  notificationId       String?                @db.VarChar(64)
  lang                 Lang                   @default(en)
  role                 UserRole               @default(user)
  RestoreLink          RestoreLink[]
  ConfirmLink          ConfirmLink[]
  Phrase               Phrase[]
  Tag                  Tag[]
  OnlineStatistic      OnlineStatistic[]
  PushNotificationUser PushNotificationUser[]
}

model PushNotification {
  id                   Int                    @id @default(autoincrement())
  title                String
  description          String
  path                 String
  created              DateTime               @default(now())
  PushNotificationUser PushNotificationUser[]
}

model PushNotificationUser {
  id                 Int              @id @default(autoincrement())
  userId             String
  pushNotificationId Int
  User               User             @relation(fields: [userId], references: [id])
  PushNotification   PushNotification @relation(fields: [pushNotificationId], references: [id])
  created            DateTime         @default(now())
}

model RestoreLink {
  id      String   @id @default(uuid())
  userId  String
  User    User     @relation(fields: [userId], references: [id])
  created DateTime @default(now())
}

model ConfirmLink {
  id      String   @id @default(uuid())
  userId  String
  User    User     @relation(fields: [userId], references: [id])
  created DateTime @default(now())
}

model Phrase {
  id          String      @id @default(uuid())
  // deps package/app/utils/constants.PHRASE_MAX_LENGTH
  text        String      @db.VarChar(1000)
  translate   String      @db.VarChar(1500)
  reTranslate String      @db.VarChar(1500)
  deleted     Boolean     @default(false)
  userId      String
  nativeLang  String      @db.VarChar(2)
  learnLang   String      @db.VarChar(2)
  User        User        @relation(fields: [userId], references: [id])
  updated     DateTime    @default(now())
  created     DateTime    @default(now())
  PhraseTag   PhraseTag[]
}

model PhraseTag {
  id       String   @id @default(uuid())
  tagId    String
  Tag      Tag      @relation(fields: [tagId], references: [id])
  phraseId String
  Phrase   Phrase   @relation(fields: [phraseId], references: [id])
  created  DateTime @default(now())
}

model Tag {
  id        String      @id @default(uuid())
  text      String
  userId    String
  User      User        @relation(fields: [userId], references: [id])
  updated   DateTime    @default(now())
  created   DateTime    @default(now())
  PhraseTag PhraseTag[]
}

enum MessageType {
  info
  warn
  error
}

model ServerMessage {
  id      String      @id @default(uuid())
  type    MessageType
  lang    Lang
  text    String
  comment String?
  created DateTime    @default(now())
}

model Online {
  id      String   @id
  created DateTime @default(now())
}

model OnlineStatistic {
  id      String   @id @default(uuid())
  userId  String
  User    User     @relation(fields: [userId], references: [id])
  updated DateTime @default(now())
  created DateTime @default(now())
}

enum SelectorNames {
  textarea
  translate
  reTranslate
}

model Selector {
  id      Int           @id @default(autoincrement())
  type    SelectorNames
  value   String
  created DateTime      @default(now())
}
